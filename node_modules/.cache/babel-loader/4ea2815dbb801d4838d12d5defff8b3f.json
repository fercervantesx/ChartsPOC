{"ast":null,"code":"import _slicedToArray from \"/Users/fernando.cervantes/www/react-vis/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/fernando.cervantes/www/react-vis/src/index.js\";\nimport React, { Component, useState } from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport 'react-vis/dist/style.css';\nimport { XYPlot, FlexibleWidthXYPlot, XAxis, YAxis, ChartLabel, HorizontalGridLines, RadialChart, Hint, Crosshair, CustomSVGSeries, AreaSeries, MarkSeries } from 'react-vis';\nimport data from './data.json';\nimport weatherData from './weatherData.json';\nimport Sunny from './sunny.jsx';\nimport Clouds from './clouds.jsx';\nimport SemiClouds from './semi-clouds.jsx';\nimport Thunder from \"./icons/Thunder\";\nconst series = data.map((d, index) => {\n  let weathers = weatherData.list.slice(0, 40);\n  return {\n    x: new Date(weathers[index].dt_txt).valueOf(),\n    y: d.ep || 0,\n    w: weathers[index].weather.main\n  };\n});\nconst symbolSeries = series.map((s, i) => ({\n  x: s.x,\n  y: 8.5,\n  customComponent: (row, positionInPixels) => {\n    let cmp;\n\n    if (i % 4 === 0 && i < series.length - 1) {\n      if (s.w === 'Thunderstorm') {\n        cmp = React.createElement(Thunder, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      }\n\n      if (s.w === 'Drizzle') {\n        cmp = React.createElement(SemiClouds, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      }\n\n      if (s.w === 3) {\n        cmp = React.createElement(Clouds, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      }\n    }\n\n    return cmp;\n  }\n}));\n\nconst _onNearestX = setValues => (value, {\n  index\n}) => {\n  setValues([series[index]]);\n};\n\nfunction Example(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  return React.createElement(FlexibleWidthXYPlot, {\n    xType: \"ordinal\",\n    height: 400,\n    yDomain: [0, 9],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(HorizontalGridLines, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    tickTotal: 3,\n    tickFormat: (v, i) => {\n      if (i % 4 === 0) {\n        return \"\".concat(new Date(parseInt(v)).getHours(), \":\").concat(new Date(parseInt(v)).getMinutes().toString().padStart(2, '0'));\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    tickValues: [0, 5, 9],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(ChartLabel, {\n    text: \"KWH\",\n    className: \"alt-y-label\",\n    includeMargin: false,\n    xPercent: -0.02,\n    yPercent: 0.25,\n    style: {\n      transform: 'rotate(-90)',\n      textAnchor: 'end'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(ChartLabel, {\n    text: \"KWH\",\n    className: \"alt-y-label\",\n    includeMargin: false,\n    xPercent: -0.02,\n    yPercent: 0.75,\n    style: {\n      transform: 'rotate(-90)',\n      textAnchor: 'end'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(AreaSeries, {\n    onNearestX: _onNearestX(setValues),\n    data: series,\n    fill: '#FFE600',\n    opacity: 0.5,\n    style: {\n      stroke: '#FFE600',\n      strokeWidth: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(CustomSVGSeries, {\n    data: symbolSeries,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(MarkSeries, {\n    className: \"mark-series-example\",\n    size: [2],\n    stroke: '#FFE600',\n    fill: '#FFE600',\n    data: series,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(Crosshair, {\n    values: values,\n    className: 'test-class-name',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      padding: 5,\n      width: 150,\n      background: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Date: \", values[0] && new Date(values[0].x).toDateString()), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"KWH: \", values[0] && values[0].y), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Weather:\", ' ', values[0] && values[0].w === 1 ? 'Sunny' : values[0] && values[0].w === 2 ? 'Partly cloudy' : 'Cloudy'))));\n}\n\nclass SimpleRadialChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: false\n    };\n  }\n\n  render() {\n    const value = this.state.value;\n    return React.createElement(RadialChart, {\n      className: 'donut-chart-example',\n      innerRadius: 100,\n      radius: 140,\n      getAngle: d => d.theta,\n      data: [{\n        theta: 2,\n        className: 'custom-class'\n      }, {\n        theta: 6\n      }, {\n        theta: 2\n      }, {\n        theta: 3\n      }, {\n        theta: 1\n      }],\n      onValueMouseOver: v => this.setState({\n        value: v\n      }),\n      onSeriesMouseOut: v => this.setState({\n        value: false\n      }),\n      width: 300,\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, value !== false && React.createElement(Hint, {\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'React'\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Example, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }));\n  }\n\n}\n\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 179\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/fernando.cervantes/www/react-vis/src/index.js"],"names":["React","Component","useState","render","XYPlot","FlexibleWidthXYPlot","XAxis","YAxis","ChartLabel","HorizontalGridLines","RadialChart","Hint","Crosshair","CustomSVGSeries","AreaSeries","MarkSeries","data","weatherData","Sunny","Clouds","SemiClouds","Thunder","series","map","d","index","weathers","list","slice","x","Date","dt_txt","valueOf","y","ep","w","weather","main","symbolSeries","s","i","customComponent","row","positionInPixels","cmp","length","_onNearestX","setValues","value","Example","props","values","v","parseInt","getHours","getMinutes","toString","padStart","transform","textAnchor","stroke","strokeWidth","padding","width","background","toDateString","SimpleRadialChart","state","theta","className","setState","App","constructor","name","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { render } from 'react-dom'\nimport './index.css'\nimport 'react-vis/dist/style.css'\nimport {\n  XYPlot,\n  FlexibleWidthXYPlot,\n  XAxis,\n  YAxis,\n  ChartLabel,\n  HorizontalGridLines,\n  RadialChart,\n  Hint,\n  Crosshair,\n  CustomSVGSeries,\n  AreaSeries,\n  MarkSeries,\n} from 'react-vis'\nimport data from './data.json'\nimport weatherData from './weatherData.json'\nimport Sunny from './sunny.jsx'\nimport Clouds from './clouds.jsx'\nimport SemiClouds  from './semi-clouds.jsx'\nimport Thunder from \"./icons/Thunder\";\n\nconst series = data.map((d, index) => {\n  let weathers = weatherData.list.slice(0, 40);\n  return {\n    x: new Date(weathers[index].dt_txt).valueOf(),\n    y: d.ep || 0,\n    w: weathers[index].weather.main,\n  }\n})\n\nconst symbolSeries = series.map((s, i) => ({\n  x: s.x,\n  y: 8.5,\n  customComponent: (row, positionInPixels) => {\n    let cmp\n    if (i % 4 === 0 && i < series.length - 1) {\n      if (s.w === 'Thunderstorm') {\n        cmp = <Thunder />\n      }\n      if (s.w === 'Drizzle') {\n        cmp = <SemiClouds />\n      }\n      if (s.w === 3) {\n        cmp = <Clouds />\n      }\n    }\n    return cmp\n  },\n}))\n\nconst _onNearestX = setValues => (value, { index }) => {\n  setValues([series[index]])\n}\n\nfunction Example(props) {\n  const [values, setValues] = useState([])\n  return (\n    <FlexibleWidthXYPlot xType=\"ordinal\" height={400} yDomain={[0, 9]}>\n      <HorizontalGridLines />\n      <XAxis\n        tickTotal={3}\n        tickFormat={(v, i) => {\n          if (i % 4 === 0) {\n            return `${new Date(parseInt(v)).getHours()}:${new Date(parseInt(v))\n              .getMinutes()\n              .toString()\n              .padStart(2, '0')}`\n          }\n        }}\n      />\n      <YAxis tickValues={[0, 5, 9]} />\n      <ChartLabel\n        text=\"KWH\"\n        className=\"alt-y-label\"\n        includeMargin={false}\n        xPercent={-0.02}\n        yPercent={0.25}\n        style={{\n          transform: 'rotate(-90)',\n          textAnchor: 'end',\n        }}\n      />\n      <ChartLabel\n        text=\"KWH\"\n        className=\"alt-y-label\"\n        includeMargin={false}\n        xPercent={-0.02}\n        yPercent={0.75}\n        style={{\n          transform: 'rotate(-90)',\n          textAnchor: 'end',\n        }}\n      />\n      <AreaSeries\n        onNearestX={_onNearestX(setValues)}\n        data={series}\n        fill={'#FFE600'}\n        opacity={0.5}\n        style={{ stroke: '#FFE600', strokeWidth: 3 }}\n      />\n      <CustomSVGSeries data={symbolSeries} />\n      <MarkSeries\n        className=\"mark-series-example\"\n        size={[2]}\n        stroke={'#FFE600'}\n        fill={'#FFE600'}\n        data={series}\n      />\n      <Crosshair values={values} className={'test-class-name'}>\n        <div style={{ padding: 5, width: 150, background: 'black' }}>\n          <div>Date: {values[0] && new Date(values[0].x).toDateString()}</div>\n          <div>KWH: {values[0] && values[0].y}</div>\n          <div>\n            Weather:{' '}\n            {values[0] && values[0].w === 1\n              ? 'Sunny'\n              : values[0] && values[0].w === 2\n              ? 'Partly cloudy'\n              : 'Cloudy'}\n          </div>\n        </div>\n      </Crosshair>\n    </FlexibleWidthXYPlot>\n  )\n}\n\nclass SimpleRadialChart extends Component {\n  state = {\n    value: false,\n  }\n\n  render() {\n    const { value } = this.state\n    return (\n      <RadialChart\n        className={'donut-chart-example'}\n        innerRadius={100}\n        radius={140}\n        getAngle={d => d.theta}\n        data={[\n          { theta: 2, className: 'custom-class' },\n          { theta: 6 },\n          { theta: 2 },\n          { theta: 3 },\n          { theta: 1 },\n        ]}\n        onValueMouseOver={v => this.setState({ value: v })}\n        onSeriesMouseOut={v => this.setState({ value: false })}\n        width={300}\n        height={300}\n      >\n        {value !== false && <Hint value={value} />}\n      </RadialChart>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      name: 'React',\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Example />\n      </React.Fragment>\n    )\n  }\n}\n\nrender(<App />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}